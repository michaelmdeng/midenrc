set -g default-terminal "screen-256color"

# Automatically set window title
set-window-option -g automatic-rename on

set-window-option -g mode-keys vi

# toggle mousemode for c/p
set -g mouse off
bind M set -g mouse on
bind m set -g mouse off

set-option -g set-titles on

# faster command sequences
set -s escape-time 10
#
# keep default and C-a as prefix
set -g prefix2 C-a
bind C-a send-prefix -2

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# is_vim="tmux display-message -p '#{pane_tty}' | sed 's/\/dev\///' | xargs ps -o comm= -t | rg 'nvim'"
is_vim="ps -a | grep -qE '#{s|/dev/||:pane_tty}''.*(n?)vim'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# focus events for vim/tmux plugin
set -g focus-events on

# better window splits
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# pane active border
set-option -g pane-active-border-style fg=red

# vi-style copy
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# interactively switch sessions
bind-key s split-window -v "(tmux list-windows -a -F '#S:#W' | grep -v \"^$(tmux display-message -p '#S:#W')\$\" | fzf --reverse) | xargs tmux switch-client -t"
bind-key S choose-tree -sN
bind-key w split-window -v "(tmux list-windows -a -F '#S:#W' | grep -v \"^$(tmux display-message -p '#S:#W')\$\" | fzf --reverse) | xargs tmux switch-client -t"
bind-key W choose-tree -wN

# binding for last window/session
bind-key a last-window
bind-key C-a run-shell "python3 ~/.scripts/tmux-mdeng.py switch || tmux last-window || tmux display-message \"No window to switch to\""
bind-key b switch-client -l
bind-key C-b switch-client -l

bind-key C-w run-shell "python3 ~/.scripts/tmux-mdeng.py"

# status bar config
set-option -g status-position top
set -g status-left-length 60
set -g status-justify left
set -g status-left ' #[fg=white][#S] #[fg=white]#(hostname)@#(host `hostname` | cut -d " " -f 4)    '
set -g status-right 'Mouse: #{?mouse,ON,OFF} '

# longer history
set-option -g history-limit 10000

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'
